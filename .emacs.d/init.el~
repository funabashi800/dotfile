(require 'package)

;; MELPAを追加
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

;; MELPA-stableを追加
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)

;; Marmaladeを追加
(add-to-list 'package-archives  '("marmalade" . "http://marmalade-repo.org/packages/") t)

;; Orgを追加
(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)

;; 初期化
(package-initialize)(require 'package)
(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
(add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/") t)
(package-initialize)
;; cmd key as super
(setq mac-command-modifier 'super)

;;C-/
(global-set-key "\C-/" 'undo)

;; auto-complete for ()
(electric-pair-mode 1)
;; tab with 4 spaces
(setq-default tab-width 4 indent-tabs-mode nil)
;; start emacs without startup-page
(setq inhibit-startup-message t)
(if (eq window-system 'x)
    (menu-bar-mode 1) (menu-bar-mode 0))
(menu-bar-mode nil)
(setq initial-scratch-message "")

;; column number
(column-number-mode t)
;; row number
(global-linum-mode t)
;; emphasize designated ()
(show-paren-mode 1)
;; menue bar
(menu-bar-mode -1)
;; tool bar
(tool-bar-mode -1)
(require 'auto-complete-config)
(global-auto-complete-mode 0.5)

;; font
(add-to-list 'default-frame-alist '(font . "ricty-12"))

;; color theme
(load-theme 'dracula t)

;; alpha
(if window-system
    (progn
      (set-frame-parameter nil 'alpha 95)))

;; for inactive window
(require 'hiwin)
(hiwin-activate)
(set-face-background 'hiwin-face "gray30")

;; line number
(require 'linum)
(global-linum-mode 1)

;; delete scroll bar
(scroll-bar-mode -1)
;; display function name
(which-function-mode 1)
;; emphasize selected area
(transient-mark-mode 1)
;; display full path on title
(setq frame-title-format "%f")
;; current directory
(let ((ls (member 'mode-line-buffer-identification
		  mode-line-format)))
  (setcdr ls
	  (cons '(:eval (concat " ("
				(abbreviate-file-name default-directory)
				")"))
		(cdr ls))))
(require 'doom-themes)
;; Global settings (defaults)
(setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
      doom-themes-enable-italic t) ; if nil, italics is universally disabled

;; Load the theme (doom-one, doom-molokai, etc); keep in mind that each theme
;; may have their own settings.
(load-theme 'doom-molokai t)

;; Enable flashing mode-line on errors
(doom-themes-visual-bell-config)

;; Enable custom neotree theme (all-the-icons must be installed!)
(doom-themes-neotree-config)
;; or for treemacs users
(setq doom-themes-treemacs-theme "doom-colors") ; use the colorful treemacs theme
(doom-themes-treemacs-config)

;; Corrects (and improves) org-mode's native fontification.
(doom-themes-org-config)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (neotree hiwin elscreen dracula-theme doom-themes auto-complete))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

(require 'org)
;; Make Org mode work with files ending in .org
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
